# https://docs.pylint.org/en/latest/technical_reference/features.html

# pylint --long-help
#   There are 5 kind of message types :
#   * (C) convention, for programming standard violation
#   * (R) refactor, for bad code smell
#   * (W) warning, for python specific problems
#   * (E) error, for probable bugs in the code
#   * (F) fatal, if an error occurred which prevented pylint from doing

[MASTER]
jobs = 0
max-args = 6

[MESSAGES CONTROL]
disable =
  abstract-method,
  arguments-differ,
  assigning-non-slot,  # pylint does not understand descriptors like WeakAttr in _orderedbase.py (https://github.com/PyCQA/pylint/issues/6001)
  attribute-defined-outside-init,
  invalid-name,
  line-too-long,
  multiple-statements,  # flags workarounds for https://github.com/python/typing/issues/548
  not-callable,  # pylint doesn't understand that the invweak weakref is callable (https://github.com/PyCQA/pylint/issues/6005)
  protected-access,
  signature-differs,  # flags MutableBidict.pop against OrderedBidict.pop (which adds a 'last' kwarg just like OrderedDict)
  too-few-public-methods,  # flags BiMappingView et al.
  too-many-branches,  # flags BidictBase._update()
  too-many-locals,  # flags BidictBase._update()
  useless-import-alias,  # pylint does not understand mypy-style "import foo as foo" explicit re-exports in bidict/__init__.py (https://github.com/PyCQA/pylint/issues/6006)
  wrong-import-position,  # bidict/__init__.py
